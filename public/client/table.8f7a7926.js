function e(e){function s(e,s){const t=Math.round(i/e);return t>1&&("e"===s.charAt(s.length-1)?s+="n":s+="en"),`vor ${t} ${s}`}const t=new Date(e),i=((new Date).getTime()-t.getTime())/1e3,n=3600,a=86400,r=7*a,l=30*a,o=365*a;return i<60?s(1,"Sekunde"):i>=60&&i<n?s(60,"Minute"):i>=n&&i<a?s(n,"Stunde"):i>=a&&i<r?s(a,"Tag"):i>=r&&i<l?s(r,"Woche"):i>=l&&i<o?s(l,"Monat"):i>=o?s(o,"Jahr"):void 0}class Base{assign(e,s){s in e&&(this[s]=e[s])}}class Column extends Base{constructor(e){super(),this.assign(e,"table"),this.assign(e,"name"),this.assign(e,"type"),this.assign(e,"unique"),this.assign(e,"required"),this.assign(e,"identifier"),this.assign(e,"hidden"),this.assign(e,"fillable"),this.assign(e,"isDisplayValue"),this.assign(e,"default"),this.assign(e,"enum"),this.setInputType(),this.setAutocomplete()}setInputType(){switch(this.type){case"boolean":this.inputType="radio";break;default:this.inputType=this.type}}setAutocomplete(){switch(this.type){case"password":this.autocomplete="new-password";break;default:this.autocomplete="off"}}modifyData(e){const s=e;switch(this.type){case"password":return s.password_confirmation=s[this.name],s;default:return s}}setDisplayData(e){const s=e;switch(this.type){case"timestamp":return s[this.name]=function(e,s={},t){return new Date(e).toLocaleDateString(t,s)}(s[this.name],{day:"numeric",month:"long",year:"numeric"}),s;default:return s}}}class Relation extends Column{constructor(e){super(e),this.assign(e,"foreignTable"),this.assign(e,"relationType"),this.assign(e,"functionName"),this.assign(e,"baseType")}}class Table extends Base{constructor(e){super(),this.assign(e,"name"),this.assign(e,"plural"),this.assign(e,"table"),this.assign(e,"parent"),this.assign(e,"children"),this.assign(e,"permissions"),this.assign(e,"editable"),this.createColumns(e.columns),this.createRelations(e.relations)}createColumns(e){this.columns=[],e.forEach(e=>{this.columns.push(new Column(e))})}createRelations(e){this.relations=[],e.forEach(e=>{this.relations.push(new Relation(e))})}getAll(){return this.columns.concat(this.relations)}arrayIsNull(e){return void 0===e?this.getAll():e}getVisible(e){return this.arrayIsNull(e).filter(e=>!1===e.hidden)}getHidden(e){return this.arrayIsNull(e).filter(e=>!0===e.hidden)}getFillable(e){return this.arrayIsNull(e).filter(e=>!0===e.fillable)}getIdentifiers(e){return this.arrayIsNull(e).filter(e=>!0===e.identifier)}getTableColumns(e){return this.arrayIsNull(e).filter(e=>"relation"!==e.type||"belongs_to"===e.baseType)}getNoDefaults(e){return this.arrayIsNull(e).filter(e=>"timestamp"!==e.type&&"id"!==e.type&&"creator_id"!==e.name)}getEditable(e){return this.arrayIsNull(e).filter(e=>this.editable.includes(e.name))}getColumnNames(e){return this.arrayIsNull(e).map(e=>e.name)}getDisplayValue(e){const s=this.arrayIsNull(e).find(e=>!0===e.isDisplayValue);return void 0===s?"id":s.name}getPermissions(e){function s(e,s){return!1!==e&&(void 0===s||e.includes(s))}let t=e;void 0!==t&&(t=parseInt(t,10));const i=s(this.permissions.read,t)||s(this.permissions["read-self"],t),n=s(this.permissions.edit,t)||s(this.permissions["edit-self"],t),a=s(this.permissions.delete,t)||s(this.permissions["delete-self"],t),{create:r}=this.permissions;return{create:r,delete:a,edit:n,read:i}}getColumnPermission(e,s){const t=this.getPermissions(e);return"new"===e?t.create:this.editable.includes(s)&&t.edit}getReadOnly(e,s){const t=this.getPermissions(e);return void 0===s?!t.edit:!this.getColumnPermission(e,s)}modifyData(e){let s=e;return this.getAll().forEach(e=>{s=e.modifyData(s)}),s}}export{Table as T,e as g};
